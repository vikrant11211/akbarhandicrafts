version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: akbar-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    networks:
      - akbar-network
    depends_on:
      - db
      - redis
      - elasticsearch

  nginx:
    image: nginx:alpine
    container_name: akbar-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - akbar-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: akbar-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - akbar-network
    ports:
      - "3306:3306"

  redis:
    image: redis:alpine
    container_name: akbar-redis
    restart: unless-stopped
    networks:
      - akbar-network
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: akbar-elasticsearch
    restart: unless-stopped
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - akbar-network
    ports:
      - "9200:9200"
      - "9300:9300"

networks:
  akbar-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  elasticsearch-data:
    driver: local 